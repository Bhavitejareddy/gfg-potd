Set Matrix Zeroes
You are given a 2D matrix mat[][] of size n√óm. 
The task is to modify the matrix such that if mat[i][j] is 0,
all the elements in the i-th row and j-th column are set to 0 and do it in constant space complexity.

Code:
class Solution {
    public void setMatrixZeroes(int[][] mat) {
        int n = mat.length; // Number of rows
        int m = mat[0].length; // Number of columns
        boolean rowFirst = false; // To track if the first row should be zero
        boolean colFirst = false; // To track if the first column should be zero

        // Check if the first column should be zero
        for (int i = 0; i < n; i++) {
            if (mat[i][0] == 0) {
                colFirst = true;
                break;
            }
        }

        // Check if the first row should be zero
        for (int i = 0; i < m; i++) {
            if (mat[0][i] == 0) {
                rowFirst = true;
                break;
            }
        }

        // Mark zeros in the first row and first column
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                if (mat[i][j] == 0) {
                    mat[i][0] = 0; // Mark the row
                    mat[0][j] = 0; // Mark the column
                }
            }
        }

        // Update the matrix based on markers
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                if (mat[i][0] == 0 || mat[0][j] == 0) {
                    mat[i][j] = 0;
                }
            }
        }

        // Handle the first row if needed
        if (rowFirst) {
            for (int i = 0; i < m; i++) {
                mat[0][i] = 0;
            }
        }

        // Handle the first column if needed
        if (colFirst) {
            for (int i = 0; i < n; i++) {
                mat[i][0] = 0;
            }
        }
    }
}
