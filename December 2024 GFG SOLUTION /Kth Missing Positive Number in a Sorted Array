Kth Missing Positive Number in a Sorted Array
Given a sorted array of distinct positive integers arr[], we need to find the kth positive number that is missing from arr[]

Code:
class Solution {
    public int kthMissing(int[] arr, int k) {
        int n = arr.length;
        int low = 0, high = n - 1;

        // Binary search for the smallest index where missing count >= k
        while (low <= high) {
            int mid = low + (high - low) / 2;

            // Calculate the number of missing numbers before arr[mid]
            int missing = arr[mid] - (mid + 1);

            if (missing < k) {
                low = mid + 1; // Move to the right
            } else {
                high = mid - 1; // Move to the left
            }
        }

        // At this point, low is the first index where missing count >= k
        // Calculate the kth missing number
        return k + high + 1;
    }
}
