Merge Without Extra Space
Given two sorted arrays a[] and b[] of size n and m respectively, the task is to merge them in sorted order without using any extra space. 
Modify a[] so that it contains the first n elements and modify b[] so that it contains the last m elements.

Code:
class Solution {
    // Function to merge the arrays.
    public void mergeArrays(int a[], int b[]) {
        int n = a.length; // size of array a
        int m = b.length; // size of array b
        int gap = nextGap(n + m); // initial gap

        while (gap > 0) {
            int i = 0, j = gap;

            // Compare and swap within array a
            while (j < n) {
                if (a[i] > a[j]) {
                    // Swap
                    int temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
                i++;
                j++;
            }

            // Compare and swap between arrays a and b
            j = j - n; // Adjust index for array b
            while (i < n && j < m) {
                if (a[i] > b[j]) {
                    // Swap
                    int temp = a[i];
                    a[i] = b[j];
                    b[j] = temp;
                }
                i++;
                j++;
            }

            // Compare and swap within array b
            i = 0;
            while (j < m) {
                if (b[i] > b[j]) {
                    // Swap
                    int temp = b[i];
                    b[i] = b[j];
                    b[j] = temp;
                }
                i++;
                j++;
            }

            gap = nextGap(gap); // Reduce the gap
        }
    }

    // Helper function to calculate the next gap
    private int nextGap(int gap) {
        if (gap <= 1) return 0;
        return (gap / 2) + (gap % 2); // Ceiling of gap/2
    }
}

