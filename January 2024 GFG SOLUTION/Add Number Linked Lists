Add Number Linked Lists
Given the head of two singly linked lists num1 and num2 representing two non-negative integers. 
task is to return the head of the linked list representing the sum of these two numbers.

For example, num1 represented by the linked list : 1 -> 9 -> 0, similarly num2 represented by the linked list: 2 -> 5. 
Sum of these two numbers is represented by 2 -> 1 -> 5.

Note: There can be leading zeros in the input lists, but there should not be any leading zeros in the output list.

Code:
class Solution {
    static Node addTwoLists(Node l1, Node l2) {
        l1 = reverse(l1);
        l2 = reverse(l2);
        Node dummy = new Node(0);
        Node tail = dummy;
        int carry = 0;
        while(l1 != null | l2 != null || carry !=0){
            int sum = carry;
            if(l1 != null){
                sum += l1.data;
                l1 = l1.next;
            }
            if(l2 != null){
                sum += l2.data;
                l2 = l2.next;
            }
            carry = sum/10;
            tail.next = new Node(sum%10);
            tail = tail.next;
        }
        Node res = reverse(dummy.next);
        while(res != null && res.data ==0 && res.next != null){
            res = res.next;
        }
        return res;
    }
     static Node reverse(Node head){
        Node prev = null, curr = head;
        while(curr != null){
            Node next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
