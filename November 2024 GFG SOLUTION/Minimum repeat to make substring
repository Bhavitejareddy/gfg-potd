Minimum repeat to make substring
Given two strings s1 and s2.
Return a minimum number of times s1 has to be repeated such that s2 is a substring of it. 
If s2 can never be a substring then return -1.

Note: Both the strings contain only lowercase letters.

Code:
class Solution {
  public:
    int minRepeats(string& s1, string& s2) {
    
        string temp=s1;
        int count=1;
        while(s1.size()<s2.size()){
            s1=s1+temp;
            count++;
        }
        if(s1.find(s2)!=-1) return count;
        s1=s1+temp;
        count++;
        if(s1.find(s2)!=-1) return count;
        return -1;
    }
};
