Minimize the Heights II
Given an array arr[] denoting heights of N towers and a positive integer K.

For each tower, you must perform exactly one of the following operations exactly once.

Increase the height of the tower by K
Decrease the height of the tower by K
Find out the minimum possible difference between the height of the shortest and tallest towers after you have modified each tower.

You can find a slight modification of the problem here.
Note: It is compulsory to increase or decrease the height by K for each tower. 
After the operation, the resultant array should not contain any negative integers.

Code:

class Solution {
    int getMinDiff(int[] arr, int k) {
        if (arr.length == 1) {
            return 0;
        }
        
        Arrays.sort(arr);
        int n = arr.length;
        
        int result = arr[n - 1] - arr[0];
        
        for (int i = 0; i < n - 1; i++) {
            int currentMax = Math.max(arr[i] + k, arr[n - 1] - k);
            int currentMin = Math.min(arr[0] + k, arr[i + 1] - k);
            
            if (currentMin < 0) {
                continue;
            }
            
            result = Math.min(result, currentMax - currentMin);
        }
        
        return result;
    }
}

The Time Complexity is O(N*logN)
The Space Complexity is O(1)
